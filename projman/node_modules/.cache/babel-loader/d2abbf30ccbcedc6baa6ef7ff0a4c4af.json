{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\projman\\\\projman\\\\src\\\\components\\\\ProjPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport TeamTable from \"./TeamTable\";\nimport CheckPointsList from \"./CheckPointsList\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport { useLocation } from \"react-router-dom\";\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport TeamMail from \"./TeamMail\";\nimport Wave from \"react-wavify\";\nimport LoginPage from \"./LoginPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlibrary.add(fab);\nexport default function ProjPage(props) {\n  _s();\n\n  console.log(\"on projpage\");\n  const [memberList, setMemberList] = React.useState([]);\n  const [link, setLink] = React.useState(\"\");\n  const [checkpoints, setCheckpoints] = React.useState([]);\n  let {\n    state\n  } = useLocation();\n  React.useEffect(() => {\n    console.log(\"before the fetch\");\n    fetch(\"http://localhost:9000/members/\" + state._id, {\n      method: \"GET\"\n    }).then(res => res.json()).then(data => {\n      setMemberList(data.list);\n      setLink(data.link);\n      setCheckpoints(data.checkpoints);\n    });\n  }, []);\n\n  if (state.profile) {\n    console.log(\"the user is logged in with : \" + state.profile.email);\n  } else {\n    console.log(\"profile not logged in\");\n    return /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#99bbff\",\n      height: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-center\",\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        href: link,\n        style: {\n          margin: \"20px auto 20px auto\"\n        },\n        children: \"Open SpreadSheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), console.log(checkpoints), /*#__PURE__*/_jsxDEV(TeamTable, {\n        members: memberList,\n        projectId: state._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CheckPointsList, {\n        checkpoints: checkpoints,\n        projectId: state._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TeamMail, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Wave, {\n      fill: \"#6699ff\",\n      paused: false,\n      options: {\n        height: 1,\n        amplitude: 20,\n        speed: 0.15,\n        points: 6\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProjPage, \"HY1qeWK/L8tflc2L0Q9UJJz5GAk=\", false, function () {\n  return [useLocation];\n});\n\n_c = ProjPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjPage\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/projman/projman/src/components/ProjPage.js"],"names":["React","TeamTable","CheckPointsList","Button","Container","useLocation","library","fab","FontAwesomeIcon","TeamMail","Wave","LoginPage","add","ProjPage","props","console","log","memberList","setMemberList","useState","link","setLink","checkpoints","setCheckpoints","state","useEffect","fetch","_id","method","then","res","json","data","list","profile","email","backgroundColor","height","width","margin","amplitude","speed","points"],"mappings":"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","sourcesContent":["import React from 'react'\nimport TeamTable from \"./TeamTable\"\nimport CheckPointsList from \"./CheckPointsList\"\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\"\nimport {   useLocation } from \"react-router-dom\";\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport TeamMail from \"./TeamMail\"\nimport Wave from \"react-wavify\"\nimport  LoginPage from \"./LoginPage\"\n\nlibrary.add(fab);\n\nexport default function ProjPage(props) {\n  console.log(\"on projpage\")\n   \n     const [memberList , setMemberList] = React.useState([])\n     const [link , setLink] = React.useState(\"\")\n     const [checkpoints , setCheckpoints] = React.useState([])\n    \n    let {state} = useLocation();\n\n\n    React.useEffect(()=>{\n\n        \n        \n\n        console.log(\"before the fetch\")\n        fetch(\"http://localhost:9000/members/\" + (state._id) , {\n            method : \"GET\",\n        }).then(res => res.json()).then(data => {setMemberList(data.list) ; setLink(data.link);setCheckpoints(data.checkpoints)});\n        \n        \n\n    } ,[])\n    \n    if(state.profile){\n      console.log(\"the user is logged in with : \" + state.profile.email)\n\n    }else{\n      console.log(\"profile not logged in\")\n      return (\n        <LoginPage />\n      )\n    }\n    \n    \n    return (\n        <div  style={{\n            backgroundColor : \"#99bbff\",\n            height : \"auto\"\n          }}>\n        <Container className= \"text-center\" style={{width : \"100%\"}}>\n        \n            {/* Team table, it will have a name, emailLink , role.\n            Clicking on each team will give the notes on that memeber */}\n            {/* Then there will be list of task that are going on, people who are working on them \n            and the upcoming deadlines */}\n            <Button variant = \"dark\" href = {link} style={{margin : \"20px auto 20px auto\"}} >Open SpreadSheet</Button>\n            {console.log(checkpoints)}\n            {/* <TeamTable project = {props.project}></TeamTable> */}\n            <TeamTable members = {memberList} projectId = {state._id} ></TeamTable>\n            <CheckPointsList checkpoints = {checkpoints} projectId = {state._id}></CheckPointsList>\n            \n            <TeamMail></TeamMail>\n\n            \n            \n        </Container>\n        <Wave fill='#6699ff'\n        paused={false}\n        options={{\n          height: 1,\n          amplitude: 20,\n          speed: 0.15,\n          points: 6\n        }}\n      />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}